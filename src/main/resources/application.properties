quarkus.ssl.native=true
quarkus.kubernetes-client.trust-certs=true

# Swagger UI settings
# ref: https://quarkus.io/guides/openapi-swaggerui
quarkus.swagger-ui.urls.camel=/api-doc
quarkus.swagger-ui.path=/q/swagger-ui
quarkus.swagger-ui.always-include=true
quarkus.camel.openapi.expose.enabled=true

# local (dev) datasource
quarkus.datasource.db-kind = h2
quarkus.datasource.username = redhat
quarkus.datasource.password = redhat
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.native.resources.includes = queries.sql, sql/*.sql

### KAFKA 
# https://quarkus.io/guides/kafka-dev-services
quarkus.kafka.devservices.enabled=false

id=YOUR-CLIENT-ID-HERE
secret=YOUR-SECRET-HERE
kafka.bootstrap.servers=YOUR-KAFKA-URL-HERE

camel.component.kafka.brokers=${kafka.bootstrap.servers}

# uncomment to set Kafka instance with SASL Plain
camel.component.kafka.security-protocol=SASL_SSL
camel.component.kafka.sasl-mechanism=PLAIN
camel.component.kafka.sasl-jaas-config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${id}" password="${secret}";

# uncomment to set Kafka instance with SASL Oauth Bearer
#camel.component.kafka.brokers = ${brokers}
#camel.component.kafka.security-protocol = SASL_SSL
#camel.component.kafka.sasl-mechanism = OAUTHBEARER
#camel.component.kafka.sasl-jaas-config = org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
#        oauth.client.id="${id}" \
#        oauth.client.secret="${secret}" \
#        oauth.token.endpoint.uri="${token}" ;
#camel.component.kafka.additional-properties[sasl.login.callback.handler.class] = io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler